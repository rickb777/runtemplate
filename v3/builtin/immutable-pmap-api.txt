func (ts KeyTypeTuples) Append1(k *Key, v *Type) KeyTypeTuples
func (ts KeyTypeTuples) Append2(k1 *Key, v1 *Type, k2 *Key, v2 *Type) KeyTypeTuples
func (ts KeyTypeTuples) Append3(k1 *Key, v1 *Type, k2 *Key, v2 *Type, k3 *Key, v3 *Type) KeyTypeTuples
func KeyTypeZip(keys ...*Key) KeyTypeTuples
func (ts KeyTypeTuples) Values(values ...*Type) KeyTypeTuples
func (ts KeyTypeTuples) ToMap() *KeyTypeMap
func NewKeyTypeMap1(k *Key, v *Type) *KeyTypeMap
func NewKeyTypeMap(kv ...KeyTypeTuple) *KeyTypeMap
func (mm *KeyTypeMap) Keys() []*Key
func (mm *KeyTypeMap) Values() []*Type
func (mm *KeyTypeMap) ToSlice() KeyTypeTuples
func (mm *KeyTypeMap) OrderedSlice(keys []*Key) KeyTypeTuples
func (mm *KeyTypeMap) Get(k *Key) (*Type, bool)
func (mm *KeyTypeMap) Put(k *Key, v *Type) *KeyTypeMap
func (mm *KeyTypeMap) ContainsKey(k *Key) bool
func (mm *KeyTypeMap) ContainsAllKeys(kk ...*Key) bool
func (mm *KeyTypeMap) Size() int
func (mm *KeyTypeMap) IsEmpty() bool
func (mm *KeyTypeMap) NonEmpty() bool
func (mm *KeyTypeMap) Foreach(f func(*Key, *Type))
func (mm *KeyTypeMap) Forall(f func(*Key, *Type) bool) bool
func (mm *KeyTypeMap) Exists(p func(*Key, *Type) bool) bool
func (mm *KeyTypeMap) Find(p func(*Key, *Type) bool) (KeyTypeTuple, bool)
func (mm *KeyTypeMap) Filter(p func(*Key, *Type) bool) *KeyTypeMap
func (mm *KeyTypeMap) Partition(p func(*Key, *Type) bool) (matching *KeyTypeMap, others *KeyTypeMap)
func (mm *KeyTypeMap) Map(f func(*Key, *Type) (*Key, *Type)) *KeyTypeMap
func (mm *KeyTypeMap) FlatMap(f func(*Key, *Type) []KeyTypeTuple) *KeyTypeMap
func (mm *KeyTypeMap) Clone() *KeyTypeMap
func (mm *KeyTypeMap) String() string
func (mm *KeyTypeMap) MkString(sep string) string
func (mm *KeyTypeMap) MkString3(before, between, after string) string
func (mm *KeyTypeMap) UnmarshalJSON(b []byte) error
func (mm *KeyTypeMap) MarshalJSON() ([]byte, error)
func (mm *KeyTypeMap) GobDecode(b []byte) error
func (mm *KeyTypeMap) GobEncode() ([]byte, error)
func (ts KeyTypeTuples) String() string
func (ts KeyTypeTuples) MkString(sep string) string
func (ts KeyTypeTuples) MkString3(before, between, after string) string
func (ts KeyTypeTuples) mkString3Bytes(before, between, after string) *bytes.Buffer
func (t KeyTypeTuple) UnmarshalJSON(b []byte) error
func (t KeyTypeTuple) MarshalJSON() ([]byte, error)
